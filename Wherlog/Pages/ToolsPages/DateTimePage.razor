@page "/tools/datetime"
@page "/tools/timestamp"

<ContentsView>
    <PageHeader Title="DateTime" />

    <FluentCard Style="height: auto; padding: 16px;">
        <FluentStack Orientation="Orientation.Vertical">
            <FluentStack HorizontalAlignment="HorizontalAlignment.Center">
                <FluentNumberField @bind-Value="timeStamp" Style="flex: 1;" />
                <FluentButton OnClick="ConvertTimeStamp">转换时间戳</FluentButton>
            </FluentStack>

            <FluentStack HorizontalAlignment="HorizontalAlignment.Center">
                <FluentDatePicker @bind-Value="dateTime" Style="flex: 1;" />
                <FluentTimePicker @bind-Value="dateTime" />
                <FluentButton OnClick="ConvertDateTime">转换时间</FluentButton>
            </FluentStack>

            <FluentStack HorizontalAlignment="HorizontalAlignment.Center">
                <FluentTextField @bind-Value="timeString"
                                 Placeholder="2022-02-22T22:22:22+08:00"
                                 Style="flex: 1;" />
                <FluentButton OnClick="ConvertTimeString">转换字符串</FluentButton>
            </FluentStack>

            <FluentStack HorizontalAlignment="HorizontalAlignment.Center" Style="justify-content: space-between;">
                <FluentButton OnClick="SetDateTimeNow">当前时间</FluentButton>
                <FluentSwitch @bind-Value="isMillisecond">时间戳是否为毫秒</FluentSwitch>
            </FluentStack>
        </FluentStack>
    </FluentCard>
</ContentsView>

@code
{
    private DateTime? dateTime = DateTime.Now;
    private long timeStamp = DateTimeOffset.UtcNow.ToUnixTimeSeconds();
    private string timeString = DateTime.Now.ToString("s");
    private bool isMillisecond = false;

    private void ConvertTimeStamp()
    {
        dateTime = isMillisecond
            ? DateTimeOffset.FromUnixTimeMilliseconds(timeStamp).LocalDateTime
            : DateTimeOffset.FromUnixTimeSeconds(timeStamp).LocalDateTime;
        timeString = dateTime?.ToString("s");
    }

    private void ConvertDateTime()
    {
        timeStamp = ((DateTimeOffset)(dateTime)).ToUnixTimeSeconds();
        timeString = dateTime?.ToString("s");
    }

    private void ConvertTimeString()
    {
        if (DateTimeOffset.TryParse(timeString, out DateTimeOffset dateTimeOffset))
        {
            dateTime = dateTimeOffset.LocalDateTime;
            timeStamp = isMillisecond
                ? dateTimeOffset.ToUnixTimeMilliseconds()
                : dateTimeOffset.ToUnixTimeSeconds();
        }
    }

    private void SetDateTimeNow()
    {
        dateTime = DateTime.Now;
        timeStamp = isMillisecond
            ? DateTimeOffset.UtcNow.ToUnixTimeMilliseconds()
            : DateTimeOffset.UtcNow.ToUnixTimeSeconds();
        timeString = DateTime.Now.ToString("s");
    }
}
