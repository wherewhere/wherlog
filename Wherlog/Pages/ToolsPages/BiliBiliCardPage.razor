@page "/tools/bilibili"
@page "/tools/bilibili-card"
@using System.Text.Json
@using System.Text

<ContentsView>
    <Content>
        <PageHeader Title="BiliBili Card" />

        <FluentStack Orientation="Orientation.Vertical">
            <FluentTabs>
                <FluentTab Label="Auto">
                    <FluentStack Orientation="Orientation.Vertical">
                        <FluentTextField Label="BiliBili Media ID"
                                         Placeholder="BV1y54y1a768"
                                         @bind-Value="ID" />
                        <FluentCombobox Width="auto"
                                        Label="Card Type"
                                        Items="types"
                                        Placeholder="video"
                                        @bind-Value="Type" />
                        <FluentTextField Label="Image Proxy"
                                         Placeholder="https://images.weserv.nl/?url="
                                         @bind-Value="imageProxy" />
                        <FluentTextField Label="Info Types"
                                         Placeholder="views danmakus"
                                         @bind-Value="infoTypes" />
                        <FluentButton OnClick="@(() => CreateCardAsync(imageProxy, id, type, infoTypes).ContinueWith(x => UpdateExample(x.Result)))">
                            Create Card
                        </FluentButton>
                    </FluentStack>
                </FluentTab>

                <FluentTab Label="Manual">
                    <FluentStack Orientation="Orientation.Vertical">
                        <FluentTextField Label="BiliBili Media ID"
                                         Placeholder="BV1y54y1a768"
                                         @bind-Value="ID" />
                        <FluentCombobox Width="auto"
                                        Label="Card Type"
                                        Items="types"
                                        Placeholder="video"
                                        @bind-Value="Type" />
                        <FluentAnchor Href="@url" Target="_blank">Get JSON</FluentAnchor>
                        <FluentTextArea Label="Input JSON"
                                        Resize="TextAreaResize.Both"
                                        @bind-Value="json" />
                        <FluentTextField Label="Image Proxy"
                                         Placeholder="https://images.weserv.nl/?url="
                                         @bind-Value="imageProxy" />
                        <FluentTextField Label="Info Types"
                                         Placeholder="views danmakus"
                                         @bind-Value="infoTypes" />
                        <FluentButton OnClick="@(() => UpdateExample(CreateCard(JsonDocument.Parse(json).RootElement, imageProxy, id, type, infoTypes)))">
                            Create Card
                        </FluentButton>
                    </FluentStack>
                </FluentTab>
            </FluentTabs>
            <MarkdownSection Content="@example" Style="max-width: 100%;" />
        </FluentStack>
    </Content>
</ContentsView>

@code
{
    private string id;
    private string type;
    private string url;
    private string json;
    private string imageProxy;
    private string infoTypes;
    private string example;
    private readonly string[] types = ["video", "article", "user", "live", "bangumi", "audio", "dynamic", "favorite", "album"];

    private string ID
    {
        get => id;
        set
        {
            if (id != value)
            {
                this.id = value;
                UpdateApiUrl();
            }
        }
    }

    private string Type
    {
        get => type;
        set
        {
            if (type != value)
            {
                this.type = value;
                UpdateApiUrl();
            }
        }
    }

    private void UpdateApiUrl()
    {
        if (string.IsNullOrWhiteSpace(id)) { url = null; }
        else { url = GetApi(id, type); }
    }


    private void UpdateExample(string element)
    {
        if (string.IsNullOrEmpty(element))
        {
            example = string.Empty;
        }
        else
        {
            const string script = "<script src=\"https://unpkg.com/hexo-tag-bilibili-card/components/bilibili-card/bilibili-card.js\"></script>";
            example = new StringBuilder()
                .AppendLine(script)
                .AppendLine(element)
                .AppendLine("```html")
                .AppendLine(element)
                .Append("```")
                .ToString();
        }
    }
}
